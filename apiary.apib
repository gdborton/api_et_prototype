FORMAT: 1A
HOST: http://www.exacttargetapis.com/

# ExactTarget API Specifications - Prototype
Prototype of ExactTarget APIs.

# Group Account Resource

## Account Object DRAFT [/accounts/{id,objectId}]

Definition of an Account resource

+ Model (application/json)
    JSON Representation of a single Account resource. Based on http://help.exacttarget.com/en/technical_library/web_service_guide/objects/account/  
    + Body
    
            {
                "accountType" : "EXACTTARGET",
                "address" : "301 Brannan St., Suite 100, San Francisco, CA 94107",
                "brandId" : 0, 
                "businessName" : "Business Name of an account's owner",
                "children" : [ 1, 2, 3, 4], 
                "city" : "San Francisco",
                "client" : "<client-id>",
                "country" : "United States",
                "createdDate" : "2014-02-27T22:14:38+00:00",
                "deletedDate" : "2014-02-27T22:14:38+00:00",
                "editionId" : 123,
                "email" : "an@email.com",
                "fax" : "415-555-5555",
                "fromName" : "Sender's Name - Deprecated",
                "id" : 123,
                "inheritedAddress" : false,
                "isActive" : 1,
                "isTestAccount" : false,
                 "localeCode" : "US",
                "modifiedDate": "2014-02-27T22:14:38+00:00",
                "name" : "A fake account",
                "objectId" : "<guid>",
                "orgId" : 323,
                "ownerId" : 123,
                "parentId" : 133,
                "partnerKey" : "myPartnerKey",
                "phone" : "415-555-5322",
                "state" : "California",
                "timezoneId" : 87,
                "zip" : "94107"
            }

+ Parameters
    + objectId (optional) ... objectId for the account, required if no id is specified
    + id (required) ... id for the account, required if no objectId is specified

### Retrieve an Account [GET]

+ Response 200
    [Account Object DRAFT][]

## Account Send Limit - Status [/accounts/{memberId}/sendlimits/status{?asOfDate,type,fields}]

Definition of an Account's current Volume Capping information.  

+   asOfDate is a ISO8601 formatted date, which must be in the future.  If unspecified, it defaults to current time.
+   type is a string, and can be "email" or "sms".  If unspecified, it will return both.
+   message credits are considered "Current" only if EffectiveDate <= asOfDate and the Expiration Date > asOfDate.
+   Only returns messageCredits that are Current
+   creditBalance is an aggregate of all credits that are Current based upon the specified asOfDate


+ Model (application/json)
    JSON Representation of an Account's Send Limits 
    + Body
    
            {
                "_links": {
                    "self": { "href": "/accounts/{memberId}/sendlimits" },
                    "parent": { "href": "/accounts/{memberId}" }
                },         
                "id" : "{memberId}",
                "creditBalance" : [
                        {
                            "type" : "email", 
                            "sent" : 5500,
                            "unused" : 4500,
                            "available" : 3500,
                            "claimed" : 1000,
                            "total" : 10000,
                            "cycleStartDate" : "2014-02-27T22:14:38+00:00",
                            "cycleEndDate" : "2014-03-26T22:14:38+00:00"
                        },
                        {
                            "type" : "sms",
                            "sent" : 2100,
                            "unused" : 2900,
                            "available" : 2900,
                            "claimed" : 0,
                            "total" : 5000,
                            "cycleStartDate" : "2014-02-27T22:14:38+00:00",
                            "cycleEndDate" : "2014-03-26T22:14:38+00:00"
                        }
                ],
                "messageCredits" : [
                    {
                        "type" : "email",
                        "credits" : [
                            {
                                "id" : 1,
                                "effectiveDate" : "2014-02-27T22:14:38+00:00",
                                "modifiedDate" : "2014-02-27T22:14:38+00:00",
                                "expirationDate" : "2014-03-26T22:14:38+00:00",
                                "messages" : 5000
                            },
                            {
                                "id" : 2,
                                "effectiveDate" : "2014-03-15T22:14:38+00:00",
                                "modifiedDate" : "2014-02-27T22:14:38+00:00",
                                "expirationDate" : "2014-04-14T22:14:38+00:00",
                                "messages" : 5000
                            }
                        ]
                    },
                    {
                        "type" : "sms",
                        "credits" : [
                            {
                                "id" : 3,
                                "effectiveDate" : "2014-02-27T22:14:38+00:00",
                                "modifiedDate" : "2014-02-27T22:14:38+00:00",
                                "expirationDate" : "2014-03-26T22:14:38+00:00",
                                "messages" : 5000
                            }
                        ]   
                    }
                ]
            }

### Retrieve an Account's Current Send Limits [GET]

+ Parameters
    + memberId (required) ... MID for the account
    + asOfDate (optional, string) ... ISO8601 formatted date, must be >= current time.  If unspecified, defaults to current time.
    + type (optional, string) ... Type of messages send limits to return.  
        + Values
            + `email`
            + `sms`
    + fields (optional, string ) ... Comma Separated string of event fields to be returned.
        + Values 
            + `id`
            + `creditBalance`
            + `messageCredits`
            
+ Response 200
    [Account Send Limit - Status][]

## Account Send Limit - Message Credits - RUD [/accounts/{memberId}/sendlimits/{messageCreditId}{?fields}]
Definition of a Send Limit Cycle

+ Model

        {
            "_links": {
                "self": { "href": "/accounts/{memberId}/sendlimits/{cycleId}" },
                "parent": { "href": "/accounts/{memberId}/sendlimits" }
            },            
            "id" : "{messageCreditId}",
            "type" : "email",
            "effectiveDate" : "2014-02-27T22:14:38+00:00",
            "expirationDate" : "2014-03-26T22:14:38+00:00",
            "modifiedDate" : "2014-02-27T22:14:38+00:00",
            "messages" : 5000
        }
        
+ Parameters
    + memberId (required) ... MID for the account
    + messageCreditId (required) ... id for the messageCredit
    + fields (optional, string ) ... Comma Separated string of fields to be returned.
        + Values 
            + `id`
            + `purchaseDate`
            + `expirationDate`
            + `messages`
            + `type`

### Retrieve Message Credit [GET]

+ Response 200
[Account Send Limit - Message Credits - RUD][]

### Update Message Credit [PATCH]
Automatically updates modifiedDate.   

+ Request

        {
            "type" : "email",
            "messages" : 5000,
            "expirationDate" : "2014-03-26T22:14:38+00:00"
        }

+ Response 200
[Account Send Limit - Message Credits - RUD][]


### Delete Cycle [DELETE]

+ Response 204

## Account Send Limit [/accounts/{memberId}/sendlimits]
An Account's Send Limit message credits

+ Parameters
    + memberId (required) ... MID for the account


### Add Messages to Send Limits - Create a Cycle [POST]

+ Request

        {
            "type" : "email",
            "messages" : 5000,
            "effectiveDate" : "2014-02-27T22:14:38+00:00",
            "expirationDate" : "2014-03-26T22:14:38+00:00"
        }
        
+ Response 201
[Account Send Limit - Message Credits - RUD][]

### Get Send Limit Message Credits Collection [GET]

+ Response 200

            {
                "_links": {
                    "self"   : { "href": "/accounts/{memberId}/sendlimits" },
                    "parent" : { "href": "/accounts/{memberId}" },
                    "next"   : { "href": "/accounts/{memberId}/sendlimits?pageSize=3&page=3" },
                    "prev"   : { "href": "/accounts/{memberId}/sendlimits?pageSize=3&page=1" }
                },         
                "id" : "{memberId}",
                "count" : 9,
                "page" : 2,
                "pageSize" : 3,
                "messageCredits" : 
                    [
                        {
                            "id" : 4,
                            "type" : "email",
                            "effectiveDate" : "2014-02-27T22:14:38+00:00",
                            "modifiedDate" : "2014-02-27T22:14:38+00:00",
                            "expirationDate" : "2014-03-26T22:14:38+00:00",
                            "messages" : 5000
                        },
                        {
                            "id" : 5,
                            "type" : "email",
                            "effectiveDate" : "2014-03-15T22:14:38+00:00",
                            "modifiedDate" : "2014-02-27T22:14:38+00:00",
                            "expirationDate" : "2014-04-14T22:14:38+00:00",
                            "messages" : 5000
                        },
                        {
                            "id" : 6,
                            "type" : "sms",
                            "effectiveDate" : "2014-02-27T22:14:38+00:00",
                            "modifiedDate" : "2014-02-27T22:14:38+00:00",
                            "expirationDate" : "2014-03-26T22:14:38+00:00",
                            "messages" : 5000
                        }
                    ]
            }



## Account Messages Transactional Collection [/accounts/{memberId}/messages/transactional{?pageSize,count}]

Collection of Messages sent by an account.

+ Model (application/json)
    JSON Representation of Messages that have been created by an Account
    + Body
    
            {
                "_links": {
                    "self": { "href": "/accounts/{memberId}/messages/transactional" },
                    "parent": { "href": "/accounts/{memberId}" },
                    "next" : { "href": "/accounts/{memberId}/messages/transactional?pageSize=25&page=3" },
                    "prev" : { "href": "/accounts/{memberId}/messages/transactional?pageSize=25&page=1" },
                    "status" : { "href": "/accounts/{memberId}/messages/transactional/status" },
                    "search" : { "verb" : "POST", "href" : "/account/{memberId}/messages/transactional", "parameters" : "query" }
                },
                "memberId": "{memberId}",
                "count": 134, 
                "page": 2,
                "pageSize": 25,
                "messages" : [
                  { "id" : 25, "message_data" : "..." },
                  { "id" : 26, "message_data" : "..." },
                  { "id" : 27, "message_data" : "..." },
                  { "id" : 28, "message_data" : "..." },
                  { "id" : 29, "message_data" : "..." },
                  { "id" : 30, "message_data" : "..." },
                  { "id" : 31, "message_data" : "..." },
                  { "id" : 32, "message_data" : "..." },
                  { "id" : 33, "message_data" : "..." },
                  { "id" : 34, "message_data" : "..." },
                  { "id" : 35, "message_data" : "..." },
                  { "id" : 36, "message_data" : "..." },
                  { "id" : 37, "message_data" : "..." },
                  { "id" : 38, "message_data" : "..." },
                  { "id" : 39, "message_data" : "..." },
                  { "id" : 40, "message_data" : "..." },
                  { "id" : 41, "message_data" : "..." },
                  { "id" : 42, "message_data" : "..." },
                  { "id" : 43, "message_data" : "..." },
                  { "id" : 44, "message_data" : "..." },
                  { "id" : 45, "message_data" : "..." },
                  { "id" : 46, "message_data" : "..." },
                  { "id" : 47, "message_data" : "..." },
                  { "id" : 48, "message_data" : "..." },
                  { "id" : 49, "message_data" : "..." }
                ]
                
            }

+ Parameters
    + memberId (required) ... MID for the account
    + pageSize (optional, number, `100`) ... number of records to return, default 100 
    + count (optional, number `300`) ... offset of records to return
    
### Retrieve Transactional Messages for an Account [GET]

+ Response 200
    [Account Messages Transactional Collection][]

## Account Jobs Status - v1 [/accounts/{memberId}/jobs/status{?fields,startDate,endDate}]
Total counts of jobs for a given account for a given date range, grouped by status

+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string ) ... Comma Separated string of event fields to be returned.
        + Values 
            + `count`
            + `pending`
            + `processing`
            + `completed`
    + startDate =`today - 7 days` (optional, string) ... ISO8601 formatted Date String, from which to begin collecting counts from this scheduled date/time.  Depending on Precision, this may be rounded to the nearest Day or Hour.
    + endDate =`today` (optional, string) ... ISO8601 formatted Date string, end scheduled date/time to capture results on.

+ Model (application/json)
    JSON Representation of status of account jobs.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/accounts/{memberId}/jobs/status" },
                    "parent": { "href": "/accounts/{memberId}/jobs" }
                },
                "memberId": "{memberId}",
                "count": 654248,
                "pending" : 234234,
                "processing" : 23423,
                "completed" : 234,
                "startDate": "2014-02-04T03:00:00Z",
                "endDate": "2014-02-10T03:00:00Z"
            }

### Retrieve Account Job Status [GET]
+ Response 200
    [Account Jobs Status - v1][]

## Account Jobs Status - v2 [/v2/accounts/{memberId}/jobs/status{?fields,startDate,endDate}]
v2 - Total counts of jobs for a given account for a given date range, grouped by status

+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string ) ... Comma Separated string of event fields to be returned.
        + Values 
            + `count`
            + `pending`
            + `processing`
            + `completed`
    + startDate =`today - 7 days` (optional, string) ... ISO8601 formatted Date String, from which to begin collecting counts from.  Depending on Precision, this may be rounded to the nearest Day or Hour.
    + endDate =`today` (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

+ Model (application/json)
    JSON Representation of status of account jobs.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/accounts/{memberId}/jobs/status" },
                    "parent": { "href": "/accounts/{memberId}/jobs" }
                },
                "memberId": "{memberId}",
                "count": 100000,
                "pending" : { 
                    "count" : 2000,
                    "percent" : 2.000
                },
                "processing" : { 
                    "count" : 3000,
                    "percent" : 3.000
                },
                "completed" : { 
                    "count" : 95000,
                    "percent" : 95.000
                },
                "startDate": "2014-02-04T03:00:00Z",
                "endDate": "2014-02-10T03:00:00Z"
            }

### Retrieve Account Job Status [GET]
+ Response 200
    [Account Jobs Status - v2][]


## Account Events [/accounts/{memberId}/events{?fields,startDate,endDate}]
A summary of all events that have occurred for an account for a given timerange, rolled into a single object.

+ Model (application/json)
    JSON Representation of events that have occurred on an Account, between the startDate and endDate provided.

    + Body
    
            {
                "_links": {
                    "daily": { "href": "/accounts/{id}/events/daily{?fields,startDate,endDate}"},
                    "hourly": { "href": "/accounts/{id}/events/hourly{?fields,startDate,endDate}"},
                    "self": { "href": "/accounts/{id}/events/summary{?fields,startDate,endDate}" },
                    "parent": { "href": "/accounts/{id}" }
                },
                "id": "{id}",
                "startDate" : "{startDate}",
                "endDate" : "{endDate}",
                "status" : {
                  "toSend": 18714, 
                  "inProgress" : { 
                    "count" : 100, 
                    "percent" : 0.005 
                  },
                  "pending" : { 
                    "count" : 200, 
                    "percent" : 0.011 
                  }
                },
                "sent" : { 
                  "count" : 18500, 
                  "percent" : 98.856 
                },
                "delivered": { 
                  "count" : 18495, 
                  "percent" : 98.830
                },
                "bounced" : { 
                  "count" : 164, 
                  "percent" : 0.009,
                  "hard" : 14, 
                  "soft" : 100, 
                  "blocked" : 50,
                  "technical" : 1,
                  "unknown" : 1
                },
                "opened" : { 
                  "unique" : {
                    "count" : 18333,
                    "percent" : 97.964
                  },
                  "count" : 18400
                },
                "clicked" : { 
                  "unique" : {
                    "count" : 18222,
                    "percent" : 97.371
                  },
                  "count" : 18300
                },
                "unsubscribed": { 
                  "count" : 3, 
                  "percent" : 0.001 
                },
                "apiErrors" : { 
                  "count" : 0
                },
                "emailErrors" : { 
                  "count" : 0, 
                  "percent" : 0.000 
                }
            }


+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate=`creationDate of first message created by account` (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.
    + endDate=`now` (optional, string) ... ISO8601 formatted Date string, end time to cap results on. 

### Retrieve Events Summary for an Account [GET]
+ Response 200
    [Account Events][]

## Account Events Daily [/accounts/{memberId}/events/daily{?fields,startDate,endDate}]
A collection of events that have occurred for an account, rolled into 24 hour chunks.

+ Model (application/json)
    JSON Representation of events that have occurred on an Account, rolled up daily
    + Body
    
            {
                "_links": {
                    "hourly": { "href": "/accounts/{id}/events/hourly{?fields,startDate,endDate}"},
                    "self": { "href": "/accounts/{id}/events/daily{?fields,startDate,endDate}" },
                    "parent": { "href": "/accounts/{id}/events" }
                },
                "id": "{id}",
                "startDate" : "{startDate}",
                "endDate" : "{endDate}",
                "Events": [
                    {
                        "date" : "2014-02-06T07:06:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "count" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "count" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "count" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "count" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "count" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "count" : 18333,
                            "percent" : 97.964
                          },
                          "count" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "count" : 18222,
                            "percent" : 97.371
                          },
                          "count" : 18300
                        },
                        "unsubscribed": { 
                          "count" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                            "count" : 0
                        },
                        "emailErrors" : { 
                          "count" : 0, 
                          "percent" : 0.000 
                        }
                    },
                    {
                        "date" : "2014-02-05T07:06:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "count" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "count" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "count" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "count" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "count" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "count" : 18333,
                            "percent" : 97.964
                          },
                          "count" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "count" : 18222,
                            "percent" : 97.371
                          },
                          "count" : 18300
                        },
                        "unsubscribed": { 
                          "count" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "count" : 0
                        },
                        "emailErrors" : { 
                          "count" : 0, 
                          "percent" : 0.000 
                        }
                    },
                    {
                        "date" : "2014-02-04T07:06:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "count" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "count" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "count" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "count" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "count" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "count" : 18333,
                            "percent" : 97.964
                          },
                          "count" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "count" : 18222,
                            "percent" : 97.371
                          },
                          "count" : 18300
                        },
                        "unsubscribed": { 
                          "count" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "count" : 0
                        },
                        "emailErrors" : { 
                          "count" : 0, 
                          "percent" : 0.000 
                        }
                    }
                ]
            }

+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate=`today - 7 days` (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from. 
    + endDate=`today` (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve Events for an Account with daily precision [GET]
+ Response 200
    [Account Events Daily][]

## Account Events Hourly [/accounts/{memberId}/events/hourly{?fields,startDate,endDate}]
+ Model (application/json)
    JSON Representation of events that have occurred on an Account, rolled up hourly.
    + Body
    
            {
                "_links": {
                    "daily": { "href": "/accounts/{id}/events/daily{?fields,startDate,endDate}"},
                    "self": { "href": "/accounts/{id}/events/hourly{?fields,startDate,endDate}" },
                    "parent": { "href": "/accounts/{id}/events" }
                },
                "startDate" : "{startDate}",
                "endDate" : "{endDate}",
                "Events": [
                    {
                        "date" : "2014-02-04T01:00:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "count" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "count" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "count" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "count" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "count" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "count" : 18333,
                            "percent" : 97.964
                          },
                          "count" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "count" : 18222,
                            "percent" : 97.371
                          },
                          "count" : 18300
                        },
                        "unsubscribed": { 
                          "count" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "count" : 0
                        },
                        "emailErrors" : { 
                          "count" : 0, 
                          "percent" : 0.000 
                        }
                    },
                    {
                        "date" : "2014-02-04T02:00:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "count" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "count" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "count" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "count" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "count" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "count" : 18333,
                            "percent" : 97.964
                          },
                          "count" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "count" : 18222,
                            "percent" : 97.371
                          },
                          "count" : 18300
                        },
                        "unsubscribed": { 
                          "count" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "count" : 0
                        },
                        "emailErrors" : { 
                          "count" : 0, 
                          "percent" : 0.000 
                        }
                    },
                    {
                        "date" : "2014-02-04T03:00:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "count" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "count" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "count" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "count" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "count" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "count" : 18333,
                            "percent" : 97.964
                          },
                          "count" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "count" : 18222,
                            "percent" : 97.371
                          },
                          "count" : 18300
                        },
                        "unsubscribed": { 
                          "count" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "count" : 0
                        },
                        "emailErrors" : { 
                          "count" : 0, 
                          "percent" : 0.000 
                        }
                    }
                ]
            }

+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate = `Now - 24 hours` (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.
    + endDate = `Now` (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve Events for an Account, with Hourly precision [GET]

+ Response 200
    [Account Events Hourly][]


# Group Jobs resource

## Jobs Events [/jobs/{id}/events{?fields}]
A single Event object belonging to a job.  Always returns the latest values for the job, no date/time filtering allowed.

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Job to retrieve events from
    + fields (optional, string, `sent,delivered,bouncesHard,bouncesSoft,bouncesBLocked,uniqueOpened,uniqueClicked,unsubscribed` ) ... Comma Separated string of event fields to be returned. 

+ Model (application/json)
    JSON Representation of events that have occurred on a job. Percents are a percent of toSend.  Need to discuss minimum percentages.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/jobs/{id}/events" },
                    "message" : { "href" : "/messages/{messageId}" },
                    "parent": { "href": "/jobs/{id}" }
                },
                "id": "{id}",
                "accountId" : "{accountId}",
                "messageId" : "{messageId}",
                "sent" : { 
                  "count" : 18500 
                },
                "delivered": { 
                  "count" : 18336, 
                  "percent" : 99.114
                },
                "bounced" : { 
                  "count" : 164, 
                  "percent" : 0.009,
                  "hard" : 12, 
                  "soft" : 100, 
                  "blocked" : 50,
                  "technical" : 1,
                  "unknown" : 1
                },
                "opened" : { 
                  "unique" : {
                    "count" : 18133,
                    "percent" : 98.731
                  },
                  "count" : 18200
                },
                "clicked" : { 
                  "unique" : {
                    "count" : 18022,
                    "percent" : 98.288
                  },
                  "count" : 18300
                },
                "unsubscribed": { 
                  "count" : 33, 
                  "percent" : 0.002 
                }
            }

### Retrieve Events for a job [GET]
+ Response 200
    [Jobs Events][]

## Jobs Status [/jobs/{id}/status{?fields}]
Status information of a job

+ Parameters
    + id (required) ... id of the job
    + fields (optional, string ) ... Comma Separated string of event fields to be returned.
        + Values 
            + `total`
            + `pending`
            + `processing`
            + `completed`

+ Model (application/json)
    JSON Representation of status of a job.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/jobs/{id}/status" },
                    "parent": { "href": "/jobs/{id}" }
                },
                "id": "{id}",
                "total": 100000,
                "pending" : { 
                    "count" : 2000,
                    "percent" : 2.000
                },
                "processing" : { 
                    "count" : 3000,
                    "percent" : 3.000
                },
                "completed" : { 
                    "count" : 95000,
                    "percent" : 95.000
                }
            }

### Retrieve Account Job Status [GET]
+ Response 200
    [Jobs Status][]

## Job Email Thumbnail [/jobs/{id}/thumbnail{?width,height,subId}]
Email thumbnail for a job

+ Parameters
    + id (required) ... Job id.
    + width (required) ... width of the image.
    + height (required) ... height of the image.
    + subId (optional) ... Subscriber ID. This would be used in the event that the consumer wants the resulting thumbnail to be customized for a particular subscriber

+ Model (application/json)
    JSON Representation of the email preview for a job
    + Body
    
            {
                "id": "{id}",
                "img": "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",
                "contentType": "image/jpeg"
            }

### Retrieve Email Thumbnail for a Job [GET]
+ Response 200
    [Job Email Thumbnail][]



# Group Message Resource


## Create Triggered Message [/messages/triggered]
Create a new TriggeredSendDefinition

+   triggeredSendStatus, potential values: Inactive, Active, Canceled 
+   priority : Low, Medium, High

+ Model (application/json)
    JSON Response when a TriggeredSendDefinition is created
    + Body
    
            {
                "id" : "3BC9D7FE-BE25-E111-8480-001CC49493B0", 
                "name" : "TSD Name",
                "description" : "TSD Description",
                "emailId" : 1000,
                "customerKey" : "customerKey123",
                "listId" : 400,
                "triggeredSendStatus" : "New", 
                "sendClassification" : { 
                    "customerKey" : "sc CustomerKey123", 
                    "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66"
                },
                "senderProfile" : { 
                    "customerKey" : "sp CustomerKey", 
                    "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
                },
                "deliveryProfile" : { 
                    "customerKey" : "dp CustomerKey", 
                    "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
                },
                "autoAddSubscribers" : true, 
                "autoUpdateSubscribers" : true, 
                "ccEmail" : "an@email.com",
                "bccEmail" : "an@email.com",
                "emailSubject" : "The email subject",
                "isMultipart" : true,
                "isWrapped" : true,
                "suppressTracking" : true,
                "categoryId" : 2147483683,
                "campaignId" : 1000, /* doesn't exist in current SDK */
                "refreshContent" : true,
                "exclusionFilter" : "ampScript Goes Here",
                "priority" : "Low", 
                "sendSourceDataExtension" : { "customerKey" : "ssde customerKey" }
            }

### Create a Triggered Send Definition Message [POST]


+ Request (application/json)

        {
            "name" : "TSD Name",
            "description" : "TSD Description",
            "emailId" : 1000,
            "customerKey" : "customerKey123",
            "listId" : 400,
            "triggeredSendStatus" : "New", 
            "sendClassification" : { 
                "customerKey" : "sc CustomerKey123", 
                "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66"
            },
            "senderProfile" : { 
                "customerKey" : "sp CustomerKey", 
                "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
            },
            "deliveryProfile" : { 
                "customerKey" : "dp CustomerKey", 
                "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
            },
            "autoAddSubscribers" : true, 
            "autoUpdateSubscribers" : true, 
            "ccEmail" : "an@email.com",
            "bccEmail" : "an@email.com",
            "emailSubject" : "The email subject",
            "isMultipart" : true,
            "isWrapped" : true,
            "suppressTracking" : true,
            "categoryId" : 2147483683,
            "campaignId" : 1000, 
            "refreshContent" : true,
            "exclusionFilter" : "ampScript Goes Here",
            "priority" : "Low", 
            "sendSourceDataExtension" : { "customerKey" : "ssde customerKey" }
        }

+ Response 200
    [Create Triggered Message][]

## Triggered Send Message [/messages/triggered/{id}]
The Triggered Send Message Resource

+ Model (application/json)
    JSON Representation of events that have occurred on a Message, rolled up daily
    + Body
    
            {
                "links": {
                    "parent": { "href": "/v1/messages/triggered"},                    
                    "self": { "href": "/v1/messages/triggered/3BC9D7FE-BE25-E111-8480-001CC49493B0"},                    
                    "send" : { "href": "/v1/messages/3BC9D7FE-BE25-E111-8480-001CC49493B0/send"},
                    "events" : { "href": "/v1/messages/3BC9D7FE-BE25-E111-8480-001CC49493B0/events"},                    
                    "dailyEvents" : { "href": "/v1/messages/3BC9D7FE-BE25-E111-8480-001CC49493B0/events/daily"},                    
                    "hourlyEvents" : { "href": "/v1/messages/3BC9D7FE-BE25-E111-8480-001CC49493B0/events/hourly"}, 
                    "thumbnail" : { "href": "/v1/messages/3BC9D7FE-BE25-E111-8480-001CC49493B0/thumbnail"}, 
                    "queue" : { "href": "/v1/messages/3BC9D7FE-BE25-E111-8480-001CC49493B0/queue"}
                },
                "id" : "3BC9D7FE-BE25-E111-8480-001CC49493B0", 
                "name" : "TSD Name",
                "description" : "TSD Description",
                "emailId" : 1000,
                "key" : "customerKey123",
                "listId" : 400,
                "triggeredSendStatus" : "New", 
                "sendClassificationId": "fa5063f4-556b-e011-a61f-0050568700ba",
                "senderProfileId" : "30dd879c-ee2f-11db-8314-0800200c9a66",
                "deliveryProfileId" : "30dd879c-ee2f-11db-8314-0800200c9a66",
                "autoAddSubscribers" : true, 
                "autoUpdateSubscribers" : true,
                "bccEmail" : "an@email.com",
                "emailSubject" : "The email subject",
                "isMultipart" : true,
                "isWrapped" : true,
                "suppressTracking" : true,
                "categoryId" : 2147483683,
                "campaigns": [{ "id": 1, "name": "My Campaign", "color": "#ffc7c7" }],                        
                "exclusionFilter" : "ampScript Goes Here",
                "priority" : "Low",
                "sendSourceDataExtensionId" : "30dd879c-ee2f-11db-8314-0800200c9a66",
                "version": 4,
                "created": {
                    "name": "Joe Schmoe",
                    "date": "2014-02-04T03:00:00Z"
                },
                "modified": {
                    "name": "Fred Fredrickson",
                    "date": "2014-02-04T03:00:00Z"
                },
                "lastSentDate": "2014-02-04T03:00:00Z"
            }


+ Parameters
    + id (required) ... id for the triggered send message.

### Retrieve a Triggered Send Message [GET]
+ Response 200
    [Triggered Send Message][]    


## Search for Triggered Messages [/messages/triggered{?fields,filters}]
Search for triggeredSendDefinitions 

+ Model
    
            {
                "links": {
                    "self": { "href": "/v1/messages/triggered"},                    
                    "next" : { "href": "/v1/messages/triggered{?pageSize=25&page=3&...}"},
                    "previous" : { "href": "/v1/messages/triggered{?pageSize=25&page=1&...}"}                    
                },
                "count" : 3,
                "page": 2,
                "pageSize": 3,                
                "items" : [
                    {
                        "id" : "3BC9D7FE-BE25-E111-8480-001CC49493B0", 
                        "name" : "TSD Name",
                        "description" : "TSD Description",
                        "emailId" : 1000,
                        "key" : "customerKey123",
                        "listId" : 400,
                        "triggeredSendStatus" : "New", 
                        "sendClassificationId": "fa5063f4-556b-e011-a61f-0050568700ba",
                        "senderProfileId" : "30dd879c-ee2f-11db-8314-0800200c9a66",
                        "deliveryProfileId" : "30dd879c-ee2f-11db-8314-0800200c9a66",
                        "autoAddSubscribers" : true, 
                        "autoUpdateSubscribers" : true,
                        "bccEmail" : "an@email.com",
                        "emailSubject" : "The email subject",
                        "isMultipart" : true,
                        "isWrapped" : true,
                        "suppressTracking" : true,
                        "categoryId" : 2147483683,
                        "campaigns": [{ "id": 1, "name": "My Campaign", "color": "#ffc7c7" }],                        
                        "exclusionFilter" : "ampScript Goes Here",
                        "priority" : "Low",
                        "sendSourceDataExtensionId" : "30dd879c-ee2f-11db-8314-0800200c9a66",
                        "version": 4,
                        "created": {
                            "name": "Joe Schmoe",
                            "date": "2014-02-04T03:00:00Z"
                        },
                        "modified": {
                            "name": "Fred Fredrickson",
                            "date": "2014-02-04T03:00:00Z"
                        },
                        "lastSentDate": "2014-02-04T03:00:00Z"
                    },
                    {
                        "id" : "3BC9D7FE-BE25-E111-8480-001CC49493B1",
                        "name" : "TSD Name",
                        "description" : "TSD Description",
                        "emailId" : 1001,
                        "key" : "customerKey123",
                        "listId" : 401,
                        "triggeredSendStatus" : "New",
                        "sendClassificationId": "fa5063f4-556b-e011-a61f-0050568700ba",
                        "senderProfileId" : "30dd879c-ee2f-11db-8314-0800200c9a66",
                        "deliveryProfileId" : "30dd879c-ee2f-11db-8314-0800200c9a66",
                        "autoAddSubscribers" : true,
                        "autoUpdateSubscribers" : true,
                        "bccEmail" : "an@email.com",
                        "emailSubject" : "The email subject",
                        "isMultipart" : true,
                        "isWrapped" : true,
                        "suppressTracking" : true,
                        "categoryId" : 2147483683,
                        "campaigns": [{ "id": 1, "name": "My Campaign", "color": "#ffc7c7" }],                        
                        "exclusionFilter" : "ampScript Goes Here",
                        "priority" : "Low",
                        "sendSourceDataExtensionId" : "30dd879c-ee2f-11db-8314-0800200c9a66",
                        "version": 4,
                        "created": {
                            "name": "Joe Schmoe",
                            "date": "2014-02-04T03:00:00Z"
                        },
                        "modified": {
                            "name": "Fred Fredrickson",
                            "date": "2014-02-04T03:00:00Z"
                        },
                        "lastSentDate": "2014-02-04T03:00:00Z"
                    },
                    {
                        "id" : "3BC9D7FE-BE25-E111-8480-001CC49493B2",
                        "name" : "TSD Name",
                        "description" : "TSD Description",
                        "emailId" : 1002,
                        "key" : "customerKey123",
                        "listId" : 402,
                        "triggeredSendStatus" : "New",
                        "sendClassificationId": "fa5063f4-556b-e011-a61f-0050568700ba",
                        "senderProfileId" : "30dd879c-ee2f-11db-8314-0800200c9a66",
                        "deliveryProfileId" : "30dd879c-ee2f-11db-8314-0800200c9a66",
                        "autoAddSubscribers" : true,
                        "autoUpdateSubscribers" : true,
                        "bccEmail" : "an@email.com",
                        "emailSubject" : "The email subject",
                        "isMultipart" : true,
                        "isWrapped" : true,
                        "suppressTracking" : true,
                        "categoryId" : 2147483683,
                        "campaigns": [{ "id": 1, "name": "My Campaign", "color": "#ffc7c7" }],                        
                        "exclusionFilter" : "ampScript Goes Here",
                        "priority" : "Low",
                        "sendSourceDataExtensionId" : "30dd879c-ee2f-11db-8314-0800200c9a66",
                        "version": 4,
                        "created": {
                            "name": "Joe Schmoe",
                            "date": "2014-02-04T03:00:00Z"
                        },
                        "modified": {
                            "name": "Fred Fredrickson",
                            "date": "2014-02-04T03:00:00Z"
                        },
                        "lastSentDate": "2014-02-04T03:00:00Z"
                    }
                ]
            }

+ Parameters
    + fields (optional, string) ... comma-separated collection of fields to be returned
        + Values
            + `PartnerKey`
            + `CreatedDate`
            + `ModifiedDate`
            + `ClientId`
            + `CustomerKey`
            + `EmailId`
            + `ListId`
            + `Name`
            + `Description`
            + `TriggeredSendType`
            + `TriggeredSendStatus`
            + `HeaderContentAreaId`
            + `FooterContentAreaId`
            + `SendClassificationId`
            + `SendClassificationCustomerKey`
            + `SenderProfileCustomerKey`
            + `SenderProfileId`
            + `DeliveryProfileCustomerKey`
            + `DeliveryProfileId`
            + `PrivateDomainId`
            + `PrivateIPId`
            + `AutoAddSubscribers`
            + `AutoUpdateSubscribers`
            + `BatchInterval`
            + `FromName`
            + `FromAddress`
            + `BccEmail`
            + `EmailSubject`
            + `DynamicEmailSubject`
            + `IsMultipart`
            + `IsWrapped`
            + `TestEmailAddr`
            + `AllowedSlots`
            + `NewSlotTrigger`
            + `SendLimit`
            + `SendWindowOpen`
            + `SendWindowClose`
            + `SuppressTracking`
            + `Keyword`
            + `ListPartnerKey`
            + `EmailPartnerKey`
            + `SendClassificationPartnerKey`
            + `PrivateDomainPartnerKey`
            + `PrivateIPPartnerKey`
            + `ClientPartnerClientKey`
            + `IsPlatformObject`
            + `CategoryID`
    + filters (optional, string) ... JSON Collection of filter objects to be used to filter results.  Must contain a TSD property, a Simple Operator, and a Value or DateValue.
        + values
            + `[{ "property" : "customerKey", "SimpleOperator" : "equals", "Value" : "customValue" }]`
            + `[{ "property" : "customerKey", "SimpleOperator" : "equals", "DateValue" : "customValue" },{ "property" : "customerKey", "SimpleOperator" : "equals", "Value" : "customValue" }]`
    




### Retrieve a collection of triggered send definition messages [GET]
+ Response 200
[Search for Triggered Messages][]

## Triggered Send Status [/messages/triggered/status{?fields,startDate,endDate}]

Status information about a triggered send.  Retrieves status for the account ID based upon token used to make the call.

+ Model (application/json)
    JSON Representation of Statuses of Triggered Sends
    + Body
    
            {
                "_links": {
                    "self": { "href": "/messages/triggered/status{?startDate,endDate}" },
                    "parent": { "href": "/messages/triggered" }
                },
                "accountId" : "{accountId}",
                "startDate" : "{startDate}",
                "endDate" : "{endDate}",
                "count": 134, 
                "active" : 32,
                "paused" : 7,
                "stopped" : 12,
                "deleted" : 38,
                "new" : 14
            }

+ Parameters
    + startDate =`creationDate of message` (optional, string) ... ISO8601 formatted Date String, from which to begin collecting counts from. 
    + endDate =`today` (optional, string) ... ISO8601 formatted Date string, end time to cap results on.
    + fields = `count,active` (optional, string) ... comma separated list of fields to return
        + values
            + `accountId`
            + `startDate`
            + `endDate`
            + `accountId`
            + `count`
            + `active`
            + `paused`
            + `stopped`
            + `deleted`
            + `new`
            

### Retrieve Triggered Send counts [GET]

+ Response 200
    [Triggered Send Status][]

## Send a Triggered Message [/messages/{id}/send]
Send a message using a pre-existing triggered send definition


### Send a triggered send definition message [PUT]
+ Request (application/json)

        {
            "customerKey": "Send Customer Key",
            "emailAddress" : "an@email.com",
            "subscriberKey" : "an@email.com",
            "attributes" : [
                /* any attributes */
            ]
        }
        
+ Response 202



## Message Events [/messages/{id}/events{?fields,startDate,endDate}]
A collection of all events that have occurred for a message for a given time range.  Results are collated into a single result.

+ Model (application/json)
    JSON Representation of events that have occurred on a Message
    + Body
    
            {
                "_links": {
                    "daily": { "href": "/messages/{id}/events/daily{?fields,startDate,endDate}"},
                    "hourly": { "href": "/messages/{id}/events/hourly{?fields,startDate,endDate}"},
                    "self": { "href": "/messages/{id}/events{?fields,startDate,endDate}" },
                    "parent": { "href": "/messages/{id}" }
                },
                "id": "{id}",
                "startDate" : "{startDate}",
                "endDate" : "{endDate}",
                "sent" : { 
                  "count" : 18500 
                },
                "delivered": { 
                  "count" : 18336, 
                  "percent" : 99.114
                },
                "bounced" : { 
                  "count" : 164, 
                  "percent" : 0.009,
                  "hard" : 12, 
                  "soft" : 100, 
                  "blocked" : 50,
                  "technical" : 1,
                  "unknown" : 1
                },
                "opened" : { 
                  "unique" : {
                    "count" : 18133,
                    "percent" : 98.731
                  },
                  "count" : 18200
                },
                "clicked" : { 
                  "unique" : {
                    "count" : 18022,
                    "percent" : 98.288
                  },
                  "count" : 18300
                },
                "unsubscribed": { 
                  "count" : 33, 
                  "percent" : 0.002 
                }
            }

+ Parameters
    + id (required) ... id for the message
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate=`creationDate of Message` (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from. 
    + endDate=`today` (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve all Events for a Message [GET]
+ Response 200
    [Message Events][]

## Message Events Daily [/messages/{id}/events/daily{?fields,startDate,endDate}]
A collection of events that have occurred for a message, rolled into 24 hour chunks.

+ Model (application/json)
    JSON Representation of events that have occurred on a Message, rolled up daily
    + Body
    
            {
                "_links": {
                    "hourly": { "href": "/message/{id}/events/hourly{?fields,startDate,endDate}"},
                    "self": { "href": "/message/{id}/events/daily{?fields,startDate,endDate}" },
                    "parent": { "href": "/message/{id}/events" }
                },
                "id": "{id}",
                "startDate" : "{startDate}",
                "endDate" : "{endDate}",
                "Events": [
                    {
                        "date" : "2014-02-06T07:06:00Z",
                        "sent" : { 
                          "count" : 18500 
                        },
                        "delivered": { 
                          "count" : 18336, 
                          "percent" : 99.114
                        },
                        "bounced" : { 
                          "count" : 164, 
                          "percent" : 0.009,
                          "hard" : 12, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "count" : 18133,
                            "percent" : 98.731
                          },
                          "count" : 18200
                        },
                        "clicked" : { 
                          "unique" : {
                            "count" : 18022,
                            "percent" : 98.288
                          },
                          "count" : 18300
                        },
                        "unsubscribed": { 
                          "count" : 33, 
                          "percent" : 0.002 
                        }
                    },
                    {
                        "date" : "2014-02-05T07:06:00Z",
                        "sent" : { 
                          "count" : 18500 
                        },
                        "delivered": { 
                          "count" : 18336, 
                          "percent" : 99.114
                        },
                        "bounced" : { 
                          "count" : 164, 
                          "percent" : 0.009,
                          "hard" : 12, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "count" : 18133,
                            "percent" : 98.731
                          },
                          "count" : 18200
                        },
                        "clicked" : { 
                          "unique" : {
                            "count" : 18022,
                            "percent" : 98.288
                          },
                          "count" : 18300
                        },
                        "unsubscribed": { 
                          "count" : 33, 
                          "percent" : 0.002 
                        }
                    },
                    {
                        "date" : "2014-02-04T07:06:00Z",
                        "sent" : { 
                          "count" : 18500 
                        },
                        "delivered": { 
                          "count" : 18336, 
                          "percent" : 99.114
                        },
                        "bounced" : { 
                          "count" : 164, 
                          "percent" : 0.009,
                          "hard" : 12, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "count" : 18133,
                            "percent" : 98.731
                          },
                          "count" : 18200
                        },
                        "clicked" : { 
                          "unique" : {
                            "count" : 18022,
                            "percent" : 98.288
                          },
                          "count" : 18300
                        },
                        "unsubscribed": { 
                          "count" : 33, 
                          "percent" : 0.002 
                        }
                    }
                ]
            }

+ Parameters
    + id (required) ... id for the message
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate=`today - 7 days` (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate=`today` (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve Events for a Message with daily precision [GET]
+ Response 200
    [Message Events Daily][]

## Message Events Hourly [/messages/{id}/events/hourly{?fields,startDate,endDate}]
+ Model (application/json)
    JSON Representation of events that have occurred on a Message, rolled up hourly.
    + Body
    
            {
                "_links": {
                    "daily": { "href": "/message/{id}/events/daily{?fields,startDate,endDate}"},
                    "self": { "href": "/message/{id}/events/hourly{?fields,startDate,endDate}" },
                    "parent": { "href": "/message/{id}/events" }
                },
                "id": "{id}",
                "startDate" : "{startDate}",
                "endDate" : "{endDate}",
                "Events": [
                    {
                        "date" : "2014-02-04T01:00:00Z",
                        "sent" : { 
                          "count" : 18500 
                        },
                        "delivered": { 
                          "count" : 18336, 
                          "percent" : 99.114
                        },
                        "bounced" : { 
                          "count" : 164, 
                          "percent" : 0.009,
                          "hard" : 12, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "count" : 18133,
                            "percent" : 98.731
                          },
                          "count" : 18200
                        },
                        "clicked" : { 
                          "unique" : {
                            "count" : 18022,
                            "percent" : 98.288
                          },
                          "count" : 18300
                        },
                        "unsubscribed": { 
                          "count" : 33, 
                          "percent" : 0.002 
                        }
                    },
                    {
                        "date" : "2014-02-04T02:00:00Z",
                        "sent" : { 
                          "count" : 18500 
                        },
                        "delivered": { 
                          "count" : 18336, 
                          "percent" : 99.114
                        },
                        "bounced" : { 
                          "count" : 164, 
                          "percent" : 0.009,
                          "hard" : 12, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "count" : 18133,
                            "percent" : 98.731
                          },
                          "count" : 18200
                        },
                        "clicked" : { 
                          "unique" : {
                            "count" : 18022,
                            "percent" : 98.288
                          },
                          "count" : 18300
                        },
                        "unsubscribed": { 
                          "count" : 33, 
                          "percent" : 0.002 
                        }
                    },
                    {
                        "date" : "2014-02-04T03:00:00Z",
                        "sent" : { 
                          "count" : 18500 
                        },
                        "delivered": { 
                          "count" : 18336, 
                          "percent" : 99.114
                        },
                        "bounced" : { 
                          "count" : 164, 
                          "percent" : 0.009,
                          "hard" : 12, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "count" : 18133,
                            "percent" : 98.731
                          },
                          "count" : 18200
                        },
                        "clicked" : { 
                          "unique" : {
                            "count" : 18022,
                            "percent" : 98.288
                          },
                          "count" : 18300
                        },
                        "unsubscribed": { 
                          "count" : 33, 
                          "percent" : 0.002 
                        }
                    }
                ]
            }

+ Parameters
    + id (required) ... id for the message
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate=`now - 24 hours` (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate=`now` (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve Events for a Message, with Hourly precision [GET]

+ Response 200
    [Message Events Hourly][]

## Message Email Thumbnail [/messages/{id}/thumbnail{?width,height,subId}]
Email thumbnail for message jobs

+ Parameters
    + id (required) ... id for the message.  Could be a Triggered Send or an Email Send Definition id.
    + width (required) ... width of the image.
    + height (required) ... height of the image.
    + subId (optional) ... Subscriber ID. This would be used in the event that the consumer wants the resulting thumbnail to be customized for a particular subscriber

+ Model (application/json)
    JSON Representation of the email preview for all jobs associated to a message
    + Body
    
            {
                "id": "{id}",
                "img": "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",
                "contentType": "image/jpeg"
            }

### Retrieve Email Thumbnail for a Message [GET]
+ Response 200
    [Message Email Thumbnail][]

## Retrieve Queued Transactions [/messages/{id}/queue{?filter}]
A collection of queued transactions for a paused message

+ Parameters
    + id (required) ... id for the message.
    + filter (optional, string) ... complex search criteria.  Ability to search by email address or subscriber key.
        http://base/Development/REST_API#Querying
    
+ Model (application/json)
    JSON Representation for all queued transactions associated to a message
    + Body
    
            {
                "_links": {
                    "self": { "href": "/messages/{id}/queue"},
                    "next" : { "href": "/messages/{id}/queue{?pageSize=25&page=3&...}"},
                    "prev" : { "href": "/messages/{id}/queue{?pageSize=25&page=1&...}"}
                },
                "count" : 3,
                "page": 2,
                "pageSize": 2,                
                "Transactions": [
                    {
                        "jobId": "654231",
                        "tssId": "8E844912-1429-E211-B468-0022642D9886",
                        "tssrId": "0993DAEE-2190-E311-BB14-00237D5401CE",
                        "dateQueued": "2014-02-04T03:00:00Z",
                        "Member":
                        {
                            "memberId": "654",
                            "listId": "8435",
                            "fullName": "Erin Smith",
                            "emailAddress": "esmith@foo.com",
                            "subscriberKey": "esmith@foo.com"
                        }
                    },
                    {
                        "jobId": "654231",
                        "tssId": "8E844912-1429-E211-B468-0022642D9886",
                        "tssrId": "89844912-1429-E211-B468-0022642D9886",
                        "dateQueued": "2014-02-04T03:00:00Z",
                        "Member":
                        {
                            "memberId": "659",
                            "listId": "8435",
                            "fullName": "Bob Jones",
                            "emailAddress": "bjones@foo.com",
                            "subscriberKey": "bob123"
                        }
                    }
                ]
            }

### Retrieve Queued Transactions for a Message [GET]
+ Response 200
    [Retrieve Queued Transactions][]


## Delete Queued Transactions [/messages/{id}/queue]
Delete a collection of queued transactions for a paused message

+ Parameters
    + id (required) ... id for the message.

### Delete All Queued Transactions for a Message [DELETE]
+ Response 204

## Delete Queued Transactions [/messages/{id}/queue/{tssid}/{tssrId}]
Delete a queued transaction from a paused message

+ Parameters
    + id (required) ... id for the message.
    + tssid (required) ... id for the triggered send subscriber.
    + tssrId (required) ... id for the triggered send subscriber request.

### Delete Queued Transaction for a Message [DELETE]
+ Response 204

# Group Contacts

